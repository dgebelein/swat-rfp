<local:SwatPresentation x:Class="SwatPresentations.ViewPopDyn"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
		xmlns:local="clr-namespace:SwatPresentations"
		MinHeight="800" MinWidth="900"
		x:Name="root"
 >

	<UserControl.Resources>


		<Style x:Key="YAxisStyle" TargetType="{x:Type Canvas}">
			<Style.Triggers>
				<DataTrigger Binding="{Binding  Path=IsZoomed, ElementName=root}" Value="False">
					<Setter Property="Cursor" Value="ScrollNS" />
				</DataTrigger>
				<DataTrigger Binding="{Binding  Path=IsZoomed, ElementName=root}" Value="True">
					<Setter Property="Cursor" Value="Arrow" />
				</DataTrigger>
			</Style.Triggers>
		</Style>

		<Style x:Key="TimeAxisStyle" TargetType="{x:Type Canvas}">
			<Style.Triggers>
				<DataTrigger Binding="{Binding Path=IsZoomed, ElementName=root}" Value="False">
					<Setter Property="Cursor" Value="ScrollWE" />
				</DataTrigger>
				<DataTrigger Binding="{Binding  Path=IsZoomed, ElementName=root}" Value="True">
					<Setter Property="Cursor" Value="Arrow" />
				</DataTrigger>
			</Style.Triggers>
		</Style>

		<Style x:Key="StartTimeAxisStyle" TargetType="{x:Type Border}">
			<Style.Triggers>
				<DataTrigger Binding="{Binding  Path=IsZoomed, ElementName=root}" Value="False">
					<Setter Property="Cursor" Value="ScrollW" />
				</DataTrigger>
				<DataTrigger Binding="{Binding  Path=IsZoomed, ElementName=root}" Value="True">
					<Setter Property="Cursor" Value="Arrow" />
				</DataTrigger>
			</Style.Triggers>
		</Style>

		<Style x:Key="EndTimeAxisStyle" TargetType="{x:Type Border}">
			<Style.Triggers>
				<DataTrigger Binding="{Binding  Path=IsZoomed, ElementName=root}" Value="False">
					<Setter Property="Cursor" Value="ScrollE" />
				</DataTrigger>
				<DataTrigger Binding="{Binding  Path=IsZoomed, ElementName=root}" Value="True">
					<Setter Property="Cursor" Value="Arrow" />
				</DataTrigger>
			</Style.Triggers>
		</Style>

		<!--  Das verwendete Theme hat kein Template für ContextMenü -->
		<Style x:Key="MyContextMenuStyle" TargetType="{x:Type ContextMenu}">
			<Setter Property="OverridesDefaultStyle" Value="True"/>
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<!--Setter Property="Foreground" Value="{StaticResource TextBrush}"/-->
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ContextMenu}">
						<Border 
								Background="{StaticResource ContextMenueBackgroundBrush}"
								BorderBrush="{StaticResource NormalBrush}" Padding="4"
								BorderThickness="2">
							<StackPanel ClipToBounds="True" Orientation="Vertical" IsItemsHost="True"/>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!--<ContextMenu x:Key="contextLegend" Style="{StaticResource MyContextMenuStyle}"  >
			<MenuItem Header="Eigenschaften Datenserie"	Command="{x:Static tg:RepresentationCommands.ShowSeriesProperties}">
				<MenuItem.Icon>
					<Image Source="/TtpResources;component/Images/properties.png" Height="16" />
				</MenuItem.Icon>
			</MenuItem>
			<Separator/>
			<MenuItem Header="Datenserie Entfernen" Command="{x:Static tg:RepresentationCommands.DeleteSeries}">
				<MenuItem.Icon>
					<Image Source="/TtpResources;component/Images/edit-delete.png" Height="16"/>
				</MenuItem.Icon>
			</MenuItem>
			<MenuItem Header="Datenserie Kopieren"				Command="{x:Static tg:RepresentationCommands.CopySeries}">
				<MenuItem.Icon>
					<Image Source="/TtpResources;component/Images/edit-copy.png" Height="16"/>
				</MenuItem.Icon>
			</MenuItem>
			<MenuItem Header="Datenserie Einfügen"				Command="{x:Static tg:RepresentationCommands.PasteSeries}">
				<MenuItem.Icon>
					<Image Source="/TtpResources;component/Images/edit-paste.png" Height="16" />
				</MenuItem.Icon>
			</MenuItem>
			--><!--<Separator/>-->

			<!--<MenuItem Header="Eigenschaften Quelldaten"	Command="{x:Static tg:RepresentationCommands.ShowMesObjectProperties}">
				<MenuItem.Icon><Image Source="/TtpResources;component/Images/database.png" Height="16" /></MenuItem.Icon>
			</MenuItem>--><!--
		</ContextMenu>-->

		<!--<ContextMenu x:Key="contextLegendArea" Style="{StaticResource MyContextMenuStyle}" >
			<MenuItem Header="Trend Einfügen"				Command="{x:Static tg:RepresentationCommands.PasteSeries}">
				<MenuItem.Icon>
					<Image Source="/TtpResources;component/Images/paste.png" Height="16" />
				</MenuItem.Icon>
			</MenuItem>
		</ContextMenu>-->

	</UserControl.Resources>

	<!--<UserControl.CommandBindings>
		<CommandBinding Command="{x:Static tg:RepresentationCommands.DeleteSeries}"	Executed="RemoveTrend"			CanExecute="IsAnyTrendFocussed"/>
		<CommandBinding Command="{x:Static tg:RepresentationCommands.CopySeries}"		Executed="CopyTrend"				CanExecute="IsAnyTrendFocussed"/>
		<CommandBinding Command="{x:Static tg:RepresentationCommands.PasteSeries}"		Executed="PasteTrend"			CanExecute="CanPasteTrend"/>
		<CommandBinding Command="{x:Static tg:RepresentationCommands.ShowSeriesProperties}"	Executed="ShowPropertyTrend"	CanExecute="IsAnyTrendFocussed" />
		--><!--<CommandBinding Command="{x:Static tg:RepresentationCommands.ShowMesObjectProperties}"	Executed="ShowAnalyser"			CanExecute="IsAnyTrendFocussed" />--><!--
	</UserControl.CommandBindings>-->

	<Grid Margin="0" ClipToBounds="False" MinHeight="250" MinWidth="350" SnapsToDevicePixels="True" x:Name="_drawing" Background="#FF00005F" ContextMenu="{StaticResource contextLegendArea}"  >
		<!--Grid Margin="10,10,10,20" ClipToBounds="False" MinHeight="250" MinWidth="350" SnapsToDevicePixels="True" x:Name="_drawing"-->
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="75"/>
			<ColumnDefinition Name="column1" Width="*"/>
			<ColumnDefinition Width="75"/>
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="10"/>
			<RowDefinition Height="*"/>
			<RowDefinition Height="75"/>

		</Grid.RowDefinitions>

		<Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" MouseRightButtonDown="ShowTitleDialog">

			<StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
				<!-- Dieser Button ist ein fokusierbares Dummy-Element, das gebraucht wird, um den veschwundenen MouseWheel-EventHandler
					  wieder zu aktivieren, wenn die Grafik durch einen Link des Webbrowsers erzeugt wurde	-->
				<Button x:Name="_xFbtn" Width="0" Height="0"/>

				<TextBlock	Margin="2,15,2,20" x:Name="_trendTitle" Grid.Column="1" Grid.Row="0" 
								RenderTransformOrigin="0.5,0.5" FontSize="14" FontWeight="Medium" 
								HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TextAlignment="Center" />
			</StackPanel>
		</Grid>

		<Grid  Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Name="_xLegend" >
			<Grid ShowGridLines="false"  Cursor="Arrow">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>

				<Border Grid.ColumnSpan="2" BorderBrush="Transparent" Background="Transparent" />

				<StackPanel Grid.Column="0"
								Name="_xLeftLegend" Orientation="Vertical" 
								MouseDown="_xLeftLegend_MouseDown" 
								MouseLeftButtonDown="_xLegend_MouseLeftButtonDown"
								MouseMove="_xLegend_MouseMove" />


				<StackPanel Grid.Column="1" 
								Name="_xRightLegend" Orientation="Vertical"
								MouseDown="_xRightLegend_MouseDown" 
								MouseLeftButtonDown="_xLegend_MouseLeftButtonDown"
								MouseMove="_xLegend_MouseMove"/>
			</Grid>
		</Grid>


		<Grid Name="_xLeftAxisGrid" Grid.Row="2" Grid.Column="0" Grid.RowSpan="3" />
		<Canvas Name="_xLeftAxisCanvas" Grid.Row="2" Grid.Column="0" Grid.RowSpan="3" 
				Style="{StaticResource YAxisStyle}"
				MouseWheel="_xLeftAxisCanvas_MouseWheel" 
				MouseRightButtonDown="ShowLeftScalingDialog" />

		<Grid Name="_xRightAxisGrid" Grid.Row="2" Grid.Column="2" Grid.RowSpan="3" />
		<Canvas	Name="_xRightAxisCanvas" Grid.Row="2" Grid.Column="2" Grid.RowSpan="3" 
					Style="{StaticResource YAxisStyle}"
					MouseWheel="_xRightAxisCanvas_MouseWheel"
					MouseRightButtonDown="ShowRightScalingDialog" />


		<Grid Name="_xTimeAxisGrid" Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="3" />
		<Canvas Name="_xTimeAxisCanvas" 
				  Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="3"
				  Style="{StaticResource TimeAxisStyle}"
				  MouseWheel="TimeShift"
				  MouseRightButtonDown="ShowTimeRangeDialog" />
		<Border Grid.Row="4" Grid.Column="0" 
				  Height="75" Width="70" Background="Transparent" 
				  Style="{StaticResource StartTimeAxisStyle}"
				  MouseWheel="TimeShiftStart"
				  MouseRightButtonDown="ShowTimeRangeDialog" />
		<Border Grid.Row="4" Grid.Column="2" 
				  Height="75" Width="70" Background="Transparent" 
				  Style="{StaticResource EndTimeAxisStyle}"
				  MouseWheel="TimeShiftEnd"
				  MouseRightButtonDown="ShowTimeRangeDialog" />

		<Grid Name="_xChartGrid" Grid.Row="3" Grid.Column="1"   ClipToBounds="True" SizeChanged="ChartSizeChanged" SnapsToDevicePixels="True" />
		<Canvas	Name="_xChartCanvas" 
					Grid.Row="3" Grid.Column="1" 
					Cursor="Cross"
					ClipToBounds="True" SnapsToDevicePixels="True"
					MouseLeftButtonDown="_xChartCanvas_OnMouseLeftButtonDown"
					MouseLeftButtonUp="_xChartCanvas_OnMouseLeftButtonUp"
					MouseMove="_xChartCanvas_OnMouseMove"
					MouseRightButtonDown="ShowTimeRangeDialog" 
					MouseWheel="TimeShift" 
					AllowDrop="True"
					PreviewDrop="ChartCanvasDrop" />


	</Grid>

</local:SwatPresentation>
